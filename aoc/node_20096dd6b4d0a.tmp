// let input = '59791871295565763701016897619826042828489762561088671462844257824181773959378451545496856546977738269316476252007337723213764111739273853838263490797537518598068506295920453784323102711076199873965167380615581655722603274071905196479183784242751952907811639233611953974790911995969892452680719302157414006993581489851373437232026983879051072177169134936382717591977532100847960279215345839529957631823999672462823375150436036034669895698554251454360619461187935247975515899240563842707592332912229870540467459067349550810656761293464130493621641378182308112022182608407992098591711589507803865093164025433086372658152474941776320203179747991102193608';
//let steps = new Array(10000);

 let input = '03081770884921959731165446850517';
 let steps = new Array(10);

// let input = '19617804207202209144916044189917';
// let steps = new Array(100);

// let input = '80871224585914546619083218645595';
// let steps = new Array(10000);

// let input = '12345678'
// let steps = new Array(3);

for (let step of steps) {
  input = input.concat(input);
}

console.log("input", input);


let inputArray = [];
for (let index = 0; index < input.length; index++) {
  inputArray.push(parseInt(input.charAt(index)));
}


let basePattern = [0, 1, 0, -1];
let outputArray = inputArray;

outputArray = process(steps, outputArray);

let output = outputArray.join(' ').replace(/\s/g, '');
console.log('output10000---', output);

steps = new Array(100);
// outputArray = process(steps, outputArray);

// output = outputArray.join(' ').replace(/\s/g, '');
// console.log('what are the first eight digits in the final output list?---', output);

function process(steps, outputArray) {
  for (let step of steps) {
    let newOutputArray = [];
    for (let index = 0; index < outputArray.length; index++) {
      let pattern = generatePattern(outputArray.length, index + 1);
      let sum = 0;
      for (let index = 0; index < outputArray.length; index++) {
        sum += outputArray[index] * pattern[index];
      }
      newOutputArray.push(Math.abs(sum) % 10);
    }
    outputArray = newOutputArray;
    // console.log('outputArray---', outputArray.join(' ').replace(/\s/g, ''));
  }
  return outputArray;
}

// console.log('generatePattern--', generatePattern(inputArray.length, 3));
function generatePattern(length, repeat) {
  let newPattern = [];
  for (let patternIndex = 0 ; patternIndex < basePattern.length && newPattern.length <= length; patternIndex++) {
    let repeatCount = 1;
    while(repeatCount <= repeat) {
      newPattern.push(basePattern[patternIndex]);
      repeatCount++;
    }
    if (patternIndex == basePattern.length-1 && newPattern.length <= length)  {
      patternIndex = -1;
    }
  }
  return newPattern.slice(1);
}